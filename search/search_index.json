{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"blog/","title":"Blog","text":""},{"location":"contest/codeforces/2025/","title":"2025","text":""},{"location":"contest/codeforces/2025/#round-1055-div1-div2","title":"Round #1055 (Div.1 + Div.2)","text":""},{"location":"contest/codeforces/2025/#a-increase-or-smash","title":"A. Increase or Smash","text":"Details <ul> <li>Thought in the contest:</li> </ul> <p>\u76f4\u63a5\u6a21\u64ec\u904e\u7a0b\uff0c\u6709\u4ed4\u7d30\u601d\u8003\u5f88\u4e0d\u932f\uff0c\u4f46\u662f\u901f\u5ea6\u504f\u6162\uff0c\u53ef\u4ee5\u5148\u4f7f\u7528\u6bd4\u8f03\u7c21\u55ae\u7684\u7bc4\u4f8b\u3002</p>"},{"location":"contest/codeforces/2025/#b-catching-the-krug","title":"B. Catching the Krug","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u4e00\u958b\u59cb\u60f3\u5230\u4e86\u8981\u5f80\u56db\u500b\u89d2\u843d\u8d70\uff0c\u4e26\u4e14\u540c\u6642\u60f3\u5230\u4e86\u53ef\u4ee5\u4f7f\u75289\u5bae\u683c\u78ba\u8a8d\u5169\u500b\u4eba\u7684\u76f8\u5c0d\u4f4d\u7f6e\uff0c\u4f46\u662f\u5728\u5982\u4f55\u78ba\u5b9a\u8a72\u600e\u9ebc\u9078\u64c7\u8981\u5f80\u54ea\u8d70\u6642\u5361\u4f4f\u4e86\u3002</p> </li> <li> <p>Solution:</p> \\[ r_{dis} = \\left\\{  \\begin{array}{ll}     r_k &lt; r_d \\to r_d\\\\     r_k &gt; r_d \\to n - r_d\\\\     r_k = r_d \\to 0 \\end{array} \\right. \\] \\[ c_{dis} = \\left\\{  \\begin{array}{ll}     c_k &lt; c_d \\to c_d\\\\     c_k &gt; c_d \\to n - c_d\\\\     c_k = c_d \\to 0 \\end{array} \\right. \\] <p>\u7528\u7c21\u55ae\u7684\u8caa\u5fc3\u53ef\u4ee5\u767c\u73fe\uff0cDoran\u5fc5\u9808\u8981\u5f80\u908a\u754c\u8d70\uff0c\u800cKrug\u5247\u662f\u8981\u5f80Doran\u7684\u9060\u96e2\u65b9\u5411\u8d70\uff0c\u5247Doran\u62b5\u9054\u908a\u754c\u7684\u8ddd\u96e2\u70ba \\(max(r_{dis}, c_{dis})\\) \u3002</p> </li> </ul>"},{"location":"contest/codeforces/2025/#c-triple-removal","title":"C. Triple Removal","text":"<ul> <li>tag: prefix sum</li> </ul> Details <ul> <li> <p>Thought in the contest:</p> <p>\u89c0\u5bdf\u5230\u9700\u8981\u4e09\u500b\u5206\u6210\u4e00\u7d44\uff0c\u6240\u4ee5\u53ef\u4ee5\u5229\u7528\u524d\u7db4\u548c O(1) \u8a08\u7b97 [l, r] \u4e2d\u6709\u591a\u5c11 1/0\uff0c\u7576 1/0 \u7684\u500b\u6578\u7121\u6cd5\u6574\u96643\u6642\u56de\u7b54 -1 \u3002\u56e0\u70ba cost \u70ba\u4e09\u500b \\(idx_i, idx_j, idx_k\\) \u4e00\u7d44\u4e2d\u5169\u5169\u4e4b\u9593 \\(min(d_{i, j}, d_{j, k})\\) \u8ddd\u96e2\uff0c\u6b64\u6642\u8a72\u600e\u9ebc\u5c07 [l, r] \u5206\u7d44? </p> <ul> <li> <p>\u7c21\u55ae\u7684\u8caa\u5fc3\u5c07\u6700\u8fd1\u7684\u4e09\u500bidx\u5206\u6210\u4e00\u7d44\u3002\u9019\u908a\u601d\u8003\u932f\u8aa4 !!!</p> </li> <li> <p>\u984c\u76ee\u6c92\u8b80\u6e05\u695a!\u6d88\u9664\u4e09\u500b\u5143\u7d20\u5f8c\uff0c\u5269\u4e0b\u7684\u5143\u7d20\u6703\u5408\u4f75\u6210\u4e00\u500b\u65b0\u7684\u9663\u5217\u3002</p> </li> </ul> </li> <li> <p>Solution:</p> <p>\u5fc5\u9808\u89c0\u5bdf\u51fa\u53ef\u80fd\u6bcf\u6b21\u90fd\u53ef\u4ee5\u6311\u51fa\u4e00\u5c0d\u76f8\u9130\u7684pair\u52a0\u4e0a\u67d0\u500b\u5143\u7d20\u9032\u884c\u6d88\u9664 -&gt; \\(|r - l + 1| / 3\\)</p> <p>\u9664\u975e 101010 \u6216\u662f 010101 \uff0c\u9019\u7a2e\u4e00\u958b\u59cb\u9808\u8981\u9078\u9694\u5169\u500b\u9032\u884c\u6d88\u9664\uff0c\u7136\u5f8c\u518d\u505a\u8ddf\u539f\u4f86\u4e00\u6a23\u7684\u64cd\u4f5c  \u6240\u4ee5\u53ef\u4ee5\u5f97\u5230:</p> <ol> <li> <p>\u5982\u679c \\([l, r] % 3 != 0\\) </p> <p>-&gt; -1</p> </li> <li> <p>\u5982\u679c\u6709 \\(l \\le i \\le r\\) \u4e14 \\(a_i = a_{i + 1}\\)</p> <p>-&gt; |r - l + 1| / 3</p> </li> <li> <p>\u7121\u6cd5\u4f7f\u7528 2. \u7684\u53ef\u80fd\u9663\u5217\u70ba 010101... \u6216 101010...</p> <p>-&gt; 2 + (r - l + 1 - 3) / 2 \uff0c\u76f8\u7576\u65bc\u6d88\u53bb\u4e09\u500b\u5143\u7d20\uff0c\u5269\u4e0b\u7684\u9577\u5ea6\u7b97\u7d50\u679c</p> </li> </ol> <p>\u5982\u4f55\u5224\u65b7 010101/101010 ? \u5229\u752801/10\u8b8a\u5316\u7576\u4f5cdiff[i]\uff0c\u7528\u524d\u7db4\u548c\u7684\u65b9\u5f0f\u8a08\u7b97\uff0c\u82e5\u662f\u6574\u500b\u5340\u9593\u90fd\u662f10\u6216\u662f01\u5247diff[i]\u90fd\u6703\u662f1\uff0c\u90a3\u5340\u9593\u548c\u6703\u7b49\u65bc\u5340\u9593\u9577\u5ea6</p> <p>\u9019\u908a\u5728\u5be6\u4f5c\u7684\u6642\u5019\u4e00\u76f4\u932f\uff0c\u56e0\u70ba\u6211\u5011\u8a62\u554f\u7684\u5340\u9593\u662f [l, r]\uff0c\u6240\u4ee5\u8b8a\u5316\u7684\u524d\u7db4\u548c\u5340\u9593\u662f [l + 1, r] = diff[r] - diff[l]</p> </li> </ul> <p>D. Division Versus Addition</p>"},{"location":"contest/codeforces/2025/#educational-round-183-rated-for-div-2","title":"Educational Round #183 (Rated for Div. 2)","text":"<p>A. Candies for Nephews</p>"},{"location":"contest/codeforces/2025/#b-deck-of-cards","title":"B. Deck of Cards","text":"<p>tag: greedy</p> Details <ul> <li>Thought in the contest:     \u525b\u958b\u59cb\u60f3\u8aaa\u82e5\u662f\u4e00\u9047\u5230\u64cd\u4f5c\u4e09\u5f8c\u9762\u7684\u6578\u5b57\u4e5f\u90fd\u662f\u6703\u53d7\u5230\u64cd\u4f5c\u4e09\u7684\u5f71\u97ff\uff0c\u4f46\u662f\u5f9e\u7d66\u51fa\u7684\u6e2c\u8cc7\u7121\u6cd5\u8ddf\u6211\u7684\u60f3\u5339\u914d\uff0c\u6700\u5f8c\u767c\u73fe\u662f\u8981\u5c07\u64cd\u4f5c\u4e09\u7559\u5230\u6700\u5f8c\u5148\u4f7f\u7528\u64cd\u4f5c\u4e00\u8ddf\u64cd\u4f5c\u4e8c\u3002</li> </ul>"},{"location":"contest/codeforces/2025/#c-monocarps-string","title":"C. Monocarp's String","text":"<p>tag: prefix, sufix</p> Details <ul> <li> <p>Thought in the contest:</p> <p>\u6240\u6c42\u70ba\u79fb\u9664\u4e00\u6bb5 subarray \u4f7f\u5f97\u5269\u4e0b\u7684 a \u548c b \u500b\u6578\u76f8\u7b49\u3002\u99ac\u4e0a\u60f3\u5230\u524d\u7db4\u548c\u7e3d\u5408\u70ba0\u7684\u8f49\u63db\u6280\u5de7\uff0c\u4f46\u662f\u5728\u8a08\u7b97\u79fb\u9664\u6700\u5c0f\u7684 subarray \u6642\u5361\u95dc\u3002 \u539f\u672c\u60f3\u8aaa \u5229\u7528 pre - x = 0 \u79fb\u9805\u7684\u65b9\u5f0f\u627e x = pre \u7684\u9577\u5ea6\uff0c\u4f46\u662f\u9019\u6a23\u662f\u932f\u7684!</p> <p>\u4e2d\u9593\u6709\u60f3\u5230\u5c07\u5168\u90e8\u7684\u9663\u5217\u91cd\u8907\u4e00\u6b21\u62fc\u63a5\u6210\u4e00\u500b 2 * n \u7684\u9663\u5217\uff0c\u4e26\u4e14\u6c42\u51fa\u6700\u9577 pre = 0 \u7684 subarray\uff0c\u4f46\u662f\u9019\u7a2e\u4f5c\u6cd5\u9700\u8981\u8655\u7406\u5169\u7aef\u76f8\u4ea4\u7684\u60c5\u5f62\uff0c\u4ee5\u53ca \u521d\u59cb\u70ba\u7a7a\u7684\u60c5\u6cc1\uff0c\u8b8a\u5f97\u5f88\u8907\u96dc\u3002</p> <p>\u7b2c\u4e00\u500b\u89e3\u6cd5\u5176\u5be6\u96b1\u7d04\u89ba\u5f97\u6709\u9ede\u602a\u602a\u7684\uff0c\u53ef\u80fd\u9084\u662f\u8981\u76e1\u53ef\u80fd\u5617\u8a66\u60f3\u500b\u53cd\u4f8b</p> <p>\u60f3\u5f97\u592a\u8907\u96dc\u61c9\u8a72\u8981\u91cd\u65b0reset\uff0c\u6574\u7406\u73fe\u6709\u7684\u8cc7\u8a0a\u91cd\u65b0\u601d\u8003</p> </li> <li> <p>Solution:</p> <p>\u6bd4\u8cfd\u7d50\u675f\u5f8c\u60f3\u5230\u61c9\u8a72\u662f\u8981\u505a\u524d\u5f8c\u7db4\u5206\u89e3\u624d\u5c0d\uff0c\u5148\u8a08\u7b97\u5f8c\u7db4\u548c\uff0c\u4e26\u4e14\u5c07\u5f8c\u7db4\u548c\u5206\u7d44\u5132\u5b58\u5176 index \u503c\uff0c\u679a\u8209\u524d\u7db4\u5408\u7684\u6642\u5019\uff0c\u9700\u8981\u627e\u7684\u662f\u53ef\u4ee5 pre[i] + suf[j] = 0 \u7684\u5c0d\u61c9\u5f8c\u7db4\u548c index \u6b64\u6642\u5fc5\u9808 i &lt; j \u3002\u5c0d\u65bc\u524d\u5f8c\u7db4\u548c\u70ba 0 \u7684\u60c5\u6cc1\u5fc5\u9808\u7279\u5225\u8a0e\u8ad6\uff0c\u56e0\u70ba\u70ba 0 \u6642\u53ef\u4ee5\u4e0d\u9700\u8981\u53e6\u4e00\u534a\u524d/\u5f8c\u7db4\u5c31\u53ef\u4ee5\u70ba 0\u3002</p> </li> </ul> <p>D. Inversion Value of a Permutation</p>"},{"location":"contest/codeforces/2025/#round-1057-div2","title":"Round #1057 (Div.2)","text":"<p>A. Circle of Apple Trees</p>"},{"location":"contest/codeforces/2025/#b-bitwise-reversion","title":"B. Bitwise Reversion","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>Attention is all you need!!!</p> <p>\u4e00\u958b\u59cb\u8b80\u5b8c\u984c\u76ee\u6c92\u6709\u5f88\u597d\u7684\u601d\u8def\uff0c\u63a5\u8457\u5617\u8a66\u5c07\u6bcf\u500bbit\u5217\u51fa\u4f86\uff0c\u4e5f\u6c92\u6709\u60f3\u6cd5\uff0c\u6700\u5f8c\u628a a, b, c \u7576\u6210 set \u628a\u5716\u756b\u51fa\u4f86\uff0c\u4e26\u4e14\u914d\u5408 bit \u624d\u60f3\u5230\u662f\u4e0d\u662f\u53bb\u6389\u6240\u6709\u7684\u4ea4\u96c6\u5f8c\u5269\u4e0b\u7684\u4ea4\u96c6\u8981\u5404\u81ea\u7368\u7acb\u624d\u80fd\u6eff\u8db3\u984c\u76ee\u7684\u4e0d\u7b49\u5f0f\u3002</p> \\[ \\left\\{      \\begin{array}{ll}         a \\&amp; b = (1) + (2) = x \\\\         b \\&amp; c = (2) + (4) = y \\\\         a \\&amp; c = (2) + (3) = z     \\end{array} \\right. \\] <p>\u53bb\u6389 \\(a \\&amp; b \\&amp; c = (2)\\) \u5f8c (1), (3), (4) \u5fc5\u9808\u5404\u81ea\u7368\u7acb\u4e5f\u5c31\u662f\u8aaa\u5169\u5169\u5fc5\u4e0d\u6703\u6709\u4ea4\u96c6\uff0c\u5426\u5247\u8207\u984c\u76ee\u7684\u9650\u5236\u6703\u6709\u77db\u76fe\u3002</p> <p>code</p> <p></p> </li> </ul>"},{"location":"contest/codeforces/2025/#c-symmetrical-polygons","title":"C. Symmetrical Polygons","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u9019\u984c\u96d6\u7136\u4e00\u958b\u59cb\u5c31\u6709\u4e00\u500b\u5f88\u76f4\u89c0\u7684\u60f3\u6cd5\uff0c\u4f46\u662f\u4e2d\u9593\u56e0\u70ba edge case \u5361\u4f4f\u5c0e\u81f4\u76f4\u5230\u6bd4\u8cfd\u7d50\u675f\u90fd\u6c92\u6709\u505a\u51fa\u4f86\uff0c\u4e0d\u7136\u61c9\u8a72\u7b97\u662f\u4e00\u984c\u79d2\u6bba\u984c\u3002</p> <p>\u57fa\u672c\u7684\u60f3\u6cd5\u5c31\u662f\u5c0d\u9577\u5ea6\u9032\u884c\u5206\u7d44\uff0c\u5c0d\u65bc\u67d0\u500b\u9577\u5ea6 x \u6578\u91cf &gt; 1 \u7684\u908a\u53ef\u4ee5\u5c07\u5176\u5206\u5230\u5169\u500b\u7d44\u5225 a, b\uff0c\u63a5\u8457\u5c07\u5269\u4e0b\u4e00\u500b\u7684\u908a\u6309\u7167\u9806\u5e8f\u653e\u5230\u4e00\u500b\u9663\u5217\u7576\u4e2d\u3002</p> <p>\u63a5\u8457\u8981\u5229\u7528 a, b \u4e2d\u7684\u908a\u7d44\u5408\u51fa\u591a\u908a\u5f62\uff0c\u6211\u5011\u53ef\u4ee5\u4f7f\u7528 1, 2 \u500b\u908a\u7d44\u5408\u51fa\u591a\u908a\u5f62\u3002\u4e26\u4e0d\u662f\u4efb\u4f55\u7684\u908a\u90fd\u53ef\u4ee5\u7d44\u5408\u51fa\u591a\u908a\u5f62\uff0c\u4ee5\u4e09\u89d2\u5f62\u70ba\u4f8b\u5b50\uff0c\u5176\u4e2d\u5169\u500b\u908a\u5fc5\u5b9a\u8981\u5927\u65bc\u7b2c\u4e09\u908a\uff0c\u7528\u8166\u5167\u601d\u8003\u5c31\u5f88\u5bb9\u6613\u5f97\u5230\u3002</p> <p>\u8b93\u6211\u5361\u4f4f\u7684\u5730\u65b9\u662f</p> <ol> <li> <p>\u5c0d\u65bc\u984d\u5916\u5169\u500b\u908a(c, d)\u7684\u60c5\u6cc1\u5fc5\u9808\u8981 a + b + c &gt; d \uff0c\u5426\u5247\u6703\u7121\u6cd5\u5f62\u6210\u591a\u908a\u5f62</p> <p>[-a-] [-c-] [-b-]</p> <p>[--------d--------]</p> </li> <li> <p>\u96d6\u7136\u60f3\u5230\u4e0a\u9762\u7684\u689d\u4ef6\u4f46\u662f\u9084\u6709\u4e00\u500b\u90e8\u5206\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u6700\u5927\u7684\u5e7e\u689d\u908a\u90fd\u6c92\u8fa6\u6cd5\u6eff\u8db3\uff0c\u6240\u4ee5\u5176\u5be6\u8981\u904d\u6b77\u9663\u5217\u5206\u5225\u52a0\u4e00\u689d\u908a\u7684\u60c5\u6cc1\uff0c\u6216\u662f\u5169\u689d\u908a\u7684\u60c5\u6cc1\uff0c\u53d6\u6700\u5927\u503c\u3002</p> </li> </ol> <p>code</p> </li> </ul>"},{"location":"contest/codeforces/2025/#d-not-alone","title":"D. Not Alone","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u4e00\u770b\u5230\u984c\u76ee\u806f\u60f3\u5230\u4e86\u6253\u5bb6\u52ab\u820d\u7684\u554f\u984c\uff0c\u56e0\u70ba\u4e00\u65e6\u9078\u4e86\u5f80\u524d\u6216\u5f80\u5f8c\u5176\u4e2d\u4e00\u500b\u65b9\u5411\u5fc5\u9808\u76f8\u540c\u90a3\u5c31\u4f3c\u4e4e\u53ef\u4ee5\u7528\u985e\u4f3c\u6253\u5bb6\u52ab\u820d\u7684\u65b9\u5f0f\u5b9a\u7fa9\u72c0\u614b\u3002\u4f46\u662f\u5c0d\u65bc\u8f49\u79fb\u65b9\u7a0b\u6c92\u8fa6\u6cd5\u5f88\u597d\u7684\u78ba\u5b9a\u3002\u60f3\u4e86\u5f88\u4e45\u90fd\u6c92\u8fa6\u6cd5\u7a81\u7834\u3002</p> </li> <li> <p>Solution:</p> <p>\u5077\u770b\u4e86\u63d0\u793a\u5f8c\u767c\u73fe\u8981\u5206\u6210 2 \u500b \u548c 3 \u500b\u5143\u7d20\u505a\u5283\u5206\u578bDP\uff0c\u4e00\u65e6\u77e5\u9053\u5206\u6210 2 \u500b\u6216\u662f 3 \u500b\u5f8c\uff0c\u60f3\u4f7f\u7528\u905e\u63a8\u7684\u65b9\u5f0f\u505aDP\u4f46\u662f\u767c\u73fe\u6709\u9ede\u96e3\u5b9a\u7fa9\u521d\u59cb\u503c\uff0c\u6700\u5f8c\u7528\u8a18\u61b6\u5316\u641c\u7d22\u5f88\u9806\u5229\u7684\u5c31\u5b8c\u6210\u4e86\u3002</p> <ul> <li> <p>\u5206\u6210 2 \u500b\u505a\u5283\u5206\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u4f46\u662f\u5206\u6210 3 \u500b\u505a\u5283\u5206\u7684\u601d\u8def\u8981\u4ed4\u7d30\u7684\u7406\u89e3\uff0c\u56e0\u70ba\u9019\u662f\u9019\u984c\u7684\u95dc\u9375</p> <ul> <li>\u9019\u984c\u8ddf\u6253\u5bb6\u52ab\u820d\u9084\u662f\u4e0d\u4e00\u6a23\u3002\u9996\u5148\u628a\u9663\u5217\u5207\u5272\u6210\u9577\u5ea6\u70ba 2 \u7684\u5340\u584a\uff0c\u6b64\u6642\u5f88\u5bb9\u6613\u767c\u73fe\u9577\u5ea6\u70ba 3 \u7684\u9663\u5217\u7121\u6cd5\u7528\u9577\u5ea6\u70ba 2 \u7684\u5340\u584a\u7d44\u5408\u800c\u6210\uff0c\u6b64\u6642\u61c9\u7576\u60f3\u5230\u8981\u7528\u9577\u5ea6\u70ba 3 \u7684\u5340\u584a\u505a\u5283\u5206\u3002\u5c0d\u65bc\u9577\u5ea6 &gt; 4 \u7684\u5340\u584a\u53ef\u4ee5\u628a\u5b83\u5207\u5272\u6210 \u9577\u5ea6\u70ba 2 \u548c 3 \u7684\u5169\u7a2e\u5340\u584a\u7d44\u5408\u3002</li> </ul> </li> <li> <p>\u96d6\u7136\u7528\u8a18\u61b6\u5316\u5f88\u5bb9\u6613\u5be6\u4f5c\uff0c\u4f46\u9084\u662f\u8981\u7df4\u7fd2\u5148\u5728\u767d\u677f\u4e0a\u5beb\u8a18\u61b6\u5316\u7684 pseudo code \u4e4b\u5f8c\u518d\u8f49\u6210\u905e\u63a8\u7684\u5f62\u5f0f\uff0c\u56e0\u70ba\u6015\u4e4b\u5f8c\u53ef\u80fd\u9047\u5230\u6c92\u8fa6\u6cd5\u7528\u8a18\u61b6\u5316\u7684\u984c\u76ee</p> </li> </ul> <p>code</p> <ul> <li>\u5c0d\u65bc\u74b0\u5f62\u9663\u5217\u7684\u8655\u7406\uff0c\u53ef\u4ee5\u5b78\u7fd2 jiazhichen844 \u7684\u8655\u7406\uff0c\u5c07 \u591a\u51fa\u4f86\u7684\u90e8\u5206\u62fc\u63a5\u5728\u9663\u5217\u7684\u524d\u5f8c\uff0c\u63a5\u8457\u5c31\u662f\u7576\u4f5c\u666e\u901a\u7684\u9663\u5217\u505a\u8a08\u7b97</li> </ul> <p>code</p> <pre><code>auto dp = [&amp;](int offset) -&gt; LL {\n    vector&lt;LL&gt; f(n + 1, invalid);\n    f[0] = 0;\n    f[2] = costA(0 + offset, 1 + offset);\n    for(int i = 2; i &lt; n; ++i) {\n        f[i + 1] = min(f[i - 1] + costA(i - 1 + offset, i + offset), \\\n                        f[i - 2] + costB(i - 2 + offset, i - 1 + offset, i + offset));\n    }\n    return f[n];\n};\n</code></pre> <ul> <li>\u6ce8\u610f f \u548c cost \u4f7f\u7528\u7684\u4e0b\u6a19\u662f\u4e0d\u4e00\u6a23\u7684\u610f\u601d </li> </ul> </li> </ul>"},{"location":"contest/codeforces/2025/#round-1059-div3","title":"Round #1059 (Div.3)","text":""},{"location":"contest/codeforces/2025/#a-beautiful-average","title":"A. Beautiful Average","text":""},{"location":"contest/codeforces/2025/#b-beautiful-string","title":"B. Beautiful String","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u4e00\u958b\u59cb\u6c92\u770b\u61c2\u984c\u76ee\uff0cwa \u4e86\u4e00\u767c\uff0c\u4e4b\u5f8c\u4ed4\u7d30\u770b\u4e86\u4e00\u4e0b\u984c\u76ee\u7136\u5f8c\u904e\u4e86\u3002</p> </li> </ul>"},{"location":"contest/codeforces/2025/#c-beautiful-xor","title":"C. Beautiful XOR","text":""},{"location":"contest/codeforces/2025/#d-beautiful-permutation","title":"D. Beautiful Permutation","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u7b2c\u4e00\u6b21\u5beb\u4ea4\u4e92\u984c\uff0c\u8abf\u4e86\u5f88\u4e45\u8f38\u5165\u8f38\u51fa\u6700\u5f8c\u6642\u9593\u5feb\u5230\u624d\u8abf\u597d\uff0c\u8cfd\u5f8c\u6c92\u904e\u591a\u4e45\u5c31\u904e\u4e86\u3002</p> </li> <li> <p>\u4ea4\u4e92\u984c\u7684\u6a21\u677f\u8981\u6574\u7406\u597d</p> </li> </ul>"},{"location":"contest/codeforces/2025/#e-beautiful-palindromes","title":"E. Beautiful Palindromes","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u6709\u60f3\u5230\u6838\u5fc3\u60f3\u6cd5\uff0c\u53ea\u8981\u78ba\u4fdd\u56de\u6587\u4e2d\u5fc3\u7121\u6cd5\u69cb\u6210\uff0c\u90a3\u5c31\u7121\u6cd5\u69cb\u6210\u3002</p> </li> <li> <p>Solution:</p> </li> </ul>"},{"location":"contest/leetcode/2025/","title":"2025","text":""},{"location":"contest/leetcode/2025/#weekly-contest-470","title":"Weekly contest #470","text":"<p>Q1. Compute Alternating Sum</p>"},{"location":"contest/leetcode/2025/#q2-longest-subsequence-with-non-zero-bitwise-xor","title":"Q2. Longest Subsequence With Non-Zero Bitwise XOR","text":"Details <p>\u9019\u984c\u5f88\u5feb\u60f3\u5230\u81f3\u5c11\u67d0\u4e00\u4f4dbit\u7684\u6578\u91cf\u5fc5\u9808\u662f\u5947\u6578\u53ef\u4ee5xor\u5168\u90e8\uff0c\u5426\u5247\u5254\u9664\u4e00\u500b\u6578\u505axor\uff0c\u7b2c\u4e00\u767cwa\u56e0\u70ba\u6c92\u8003\u616e\u5230\u67090\u7684\u60c5\u6cc1\uff0c\u7b2c\u4e8c\u767cwa\u662f\u6c92\u8003\u616e\u5230\u5168\u70ba0\u7684\u60c5\u6cc1</p> <ul> <li>\u8981\u78ba\u8a8d\u984c\u76ee\u7684\u908a\u754c</li> </ul>"},{"location":"contest/leetcode/2025/#q3-remove-k-balanced-substrings","title":"Q3. Remove K-Balanced Substrings","text":"<ul> <li>tag: stack</li> </ul> Details <p>\u8b80\u5b8c\u984c\u99ac\u4e0a\u60f3\u5230\u8981\u7528stack\uff0c\u4f46\u662f\u5728\u72c0\u614b\u8a2d\u8a08\u4e0a\u6c92\u6709\u8003\u616e\u6e05\u695a\uff0c\u5728k = 2 \u7684\u6642\u5019 \u82e5\u662f\u9577\u9019\u6a23 (() (())) \uff0c\u6703\u5148\u6d88\u9664\u5169\u500b () \u7136\u5f8c\u5269\u4e0b\u4e00\u500b ) \u53ef\u4ee5\u8ddf\u5de6\u908a\u7559\u4e0b\u4f86\u7684\u90e8\u5206\u518d\u6b21\u7d44\u6210 (()) \u505a\u6d88\u9664\u3002</p> <ul> <li>\u8166\u888b\u4e0d\u6e05\u695a\uff0c\u6c92\u7761\u98fd</li> <li>\u6e2c\u8cc7\u60f3\u7684\u4e0d\u5920\u5168\u9762</li> <li>\u6216\u8a31\u53ef\u4ee5\u8003\u616e\u5beb\u500b\u5c0d\u62cd?</li> </ul>"},{"location":"contest/leetcode/2025/#q4-count-no-zero-pairs-that-sum-to","title":"Q4. Count No-Zero Pairs That Sum to","text":"<ul> <li>tag: digit dp</li> </ul> Details <p>\u770b\u5b8c\u984c\u76ee\u99ac\u4e0a\u60f3\u5230\u6578\u4f4dDP\uff0c\u4f46\u662f\u53ea\u8003\u616e\u4e86\u5f9e\u9ad8\u4f4d\u81f3\u4f4e\u4f4d\uff0c(a,b)\u4e2d\u679a\u8209a\u7684\u6642\u5019\u5982\u679c\u542b\u67090\u6216\u662f\u4e0d\u542b0\u7684\u60c5\u6cc1\uff0c\u4f46\u662f\u6c92\u8fa6\u6cd5\u8655\u7406\u53e6\u5916\u4e00\u534a\u542b\u67090\u7684\u60c5\u6cc1 \u56e0\u70ba\u82e5\u662f total - (a\u67090\u7684\u60c5\u6cc1) \uff0c\u5247\u53ea\u6703\u8a08\u7b97 (a\u67090\u7684\u60c5\u6cc1, b), (a\u67090\u7684\u60c5\u6cc1, b\u67090\u7684\u60c5\u6cc1) \u9019\u7a2e\u60c5\u6cc1\uff0c\u6c92\u8fa6\u6cd5\u8655\u7406 (a, b\u67090\u7684\u60c5\u6cc1)\u3002</p> <ul> <li> <p>\u60f3\u5230\u9019\u908a\u6216\u8a31\u61c9\u8a72\u99ac\u4e0a\u653e\u68c4\u601d\u8003\u9019\u689d\u8def\u5f91?</p> </li> <li> <p>Solution:</p> <p>\u771f\u6b63\u7684\u89e3\u6cd5\u61c9\u8a72\u4f7f\u7528\u5f9e\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u3002</p> <ul> <li> <p>a + b = n \u5f9e\u57fa\u672c\u7684\u52a0\u6cd5\u958b\u59cb\u89c0\u5bdf</p> <ol> <li>\u8a2d\u7576\u524d\u6578\u4f4d\u70ba d = s[i]\u3002\u5982\u679c\u4f4e\u4f4d (i + 1) \u767c\u751f\u501f\u4f4d -&gt; d - 1</li> <li>d \u53ef\u4ee5\u50cf\u9ad8\u4f4d\u501f\u4f4d -&gt; d + 10</li> <li>\u5982\u679c d = 0 \uff0c \u5982\u679c\u6b64\u6642\u4f4e\u4f4d\u501f\u4f4d\u4e86\uff0c\u5fc5\u9808\u540c\u6642\u5411\u9ad8\u4f4d\u501f\u4f4d -&gt; d = -1, d + 10 = 9</li> </ol> </li> <li> <p>\u62c6\u5206\u65b9\u6848\u6578:</p> <ul> <li> <p>\\(d = a + b\\) \u4e14 \\(a,b \\in [1, 9]\\)</p> </li> <li> <p>\u82e5\u662f\u4e0d\u501f\u4f4d\u5247\uff0c (a, b) = (1, d - 1), (2, d - 2) ... ..., (d - 1, 1)</p> \\[ cnt((a, b)) = \\left\\{  \\begin{array}{ll}     d - 1, &amp; \\text{for } d &gt;= 2\\\\     0,     &amp; \\text{for } d &lt; 2 \\end{array} \\right. \\] </li> <li> <p>\u82e5\u662f\u5411\u9ad8\u4f4d\u501f\u4e00\u4f4d\uff0c\u5247\u8981\u7b97 d + 10 = a + b\u7684\u65b9\u6848\u6578\uff0cex. 14 = (5, 9), (6, 8), (7, 7), (8, 6), (9, 4)\uff0c \u5247\u6703\u767c\u73fe \\((a, b) = (d + 1, d + 10 - (d + 1)), (d + 2, d + 10 - (d + 2)) ... = (d + x, 10 - x)\\) \uff0c\u4e00\u5171\u6709 9 - d(a &lt; d \u6709\u591a\u5c11\u500b) \u500b\u4e5f\u5c31\u662f 19 - (d + 10) \u500b</p> </li> </ul> </li> <li> <p>\u524d\u5c0e 0:</p> <ul> <li> <p>d = a + b \u6642\uff0c\u81f3\u5c11\u6709\u4e00\u4f4d\u662f 0</p> </li> <li> <p>\u82e5 a = 0\uff0c\u5247\u66f4\u9ad8\u4f4d\u7684 a' \u5fc5\u9808\u4e5f\u662f 0 -&gt; \u524d\u5c0e 0</p> </li> <li> <p>\u6b64\u6642 b = d</p> </li> <li> <p>\u5206\u985e\u8a0e\u8ad6:</p> <ul> <li>\u82e5 d != 0:<ul> <li>b = d \u53ea\u6709\u4e00\u7a2e\uff0c\u82e5\u662f d &lt; 0 \u5247\u8981\u501f\u4f4d</li> <li>\u525b\u958b\u59cb\u586b\u524d\u5c0e 0 \u6642\uff0c\u53ef\u4ee5\u5229\u7528\u5c0d\u7a31\u6027\u628a\u65b9\u6848\u6578 * 2</li> </ul> </li> <li>\u82e5 d = 0\uff0c \u5247 b = d = 0:<ul> <li>\u82e5\u662f i &gt; 0\uff0c\u56e0\u70ba\u6c92\u6709\u5411\u9ad8\u4f4d\u501f\u4f4d\uff0cb\u7684\u9ad8\u4f4d\u81f3\u5c11\u4e00\u500b\u975e0\u6578\u5b57b\uff0c\u524d\u9762\u4e0d\u80fd\u90fd\u662f0 -&gt; \u7121\u89e3</li> <li>\u5426\u5247 i=0\uff0c\u5169\u500b\u6578\u7684\u6700\u9ad8\u4f4d\u90fd\u662f 0\uff0c\u9019\u662f\u5408\u6cd5\u7684\u3002\u4f8b\u5982 100 = 49+51\uff0c49 \u548c 51 \u7684\u767e\u4f4d\u90fd\u662f\u524d\u5c0e\u96f6\u3002</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li> <p>code</p> </li> <li> <p>\u88dc\u5145\u984c\u76ee:</p> <ul> <li>F. Jee, You See?</li> </ul> </li> </ul>"},{"location":"contest/leetcode/2025/#weekly-contest-471","title":"Weekly contest #471","text":"<p>Q1. Sum of Elements With Frequency Divisible by K</p> <p>Q2. Longest Balanced Substring I (4 points)</p>"},{"location":"contest/leetcode/2025/#q3-longest-balanced-substring-ii","title":"Q3. Longest Balanced Substring II","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u6700\u4e00\u958b\u59cb\u7684\u6642\u5019\u60f3\u5230\u4e86\u524d\u7db4\u548c\uff0c\u6ed1\u52d5\u7a97\u53e3\u9019\u5e7e\u500b\u60f3\u6cd5\u3002</p> <ul> <li> <p>\u6ed1\u52d5\u7a97\u53e3\u7684\u90e8\u5206\u6c92\u6709\u597d\u7684\u65b9\u5f0f\u9650\u5236\u7a97\u53e3</p> </li> <li> <p>\u524d\u7db4\u548c\u7684\u65b9\u5f0f\u5f8c\u4f86\u6709\u60f3\u5230 01010 \u9019\u7a2e\u65b9\u5f0f\u82e5\u662f\u53ef\u4ee5\u8b93\u524d\u7db4\u548c\u70ba 0 \u5c31\u53ef\u4ee5\u627e\u5230\u983b\u7387\u4e00\u6a23\u7684\u5340\u9593\u4e86\u3002\u5c0d\u65bc (a, b), (a, c), (b, c) \u90fd\u53ef\u4ee5\u627e\uff0c\u4f46\u662f\u5361\u5728\u4e86 (a, b, c) \u9019\u4e0a\u9762\u6c92\u60f3\u5230\u5982\u4f55\u89e3\u6c7a a + b + c = 0 \u7684\u60c5\u6cc1\u3002</p> </li> </ul> </li> <li> <p>Solution:</p> <ul> <li>\u5c0d\u65bc\u67d0\u500b\u5b50\u5b57\u4e32\u5982\u679c\u8981\u7b26\u5408\u8981\u6c42\u90a3\u5fc5\u9808\uff0c\\(cntA_{[l,r]} = cntB_{[l,r]} = cntC_{[l,r]}\\)\u3002\u63a5\u8457\u62c6\u5206\u6210 </li> </ul> \\[     \\left\\{          \\begin{array}{ll}             cntA_{[l,r]} = cntB_{[l,r]}\\\\             cntB_{[l,r]} = cntC_{[l,r]}         \\end{array}     \\right. \\] <p>\u79fb\u9805\u5f8c</p> \\[     \\left\\{          \\begin{array}{ll}             cntA_{[l,r]} - cntB_{[l,r]} = 0\\\\             cntB_{[l,r]} - cntC_{[l,r]} = 0         \\end{array}     \\right. \\] <ul> <li> <p>\u82e5\u662f\u5b50\u5b57\u4e32\u7684\u4e2d\u7684 \\((cntA_{[l,r]} - cntB_{[l,r]}, cntB_{[l,r]} - cntC_{[l,r]})\\) \u76f8\u7b49\u8868\u793a\u9019\u6bb5\u5b50\u5340\u9593\u5167\u7684\u983b\u7387\u76f8\u540c\u3002</p> </li> <li> <p>\u9019\u88e1\u6709\u500b\u5bb9\u6613\u932f\u7684\u5730\u65b9\u662f\u524d\u7db4\u548c\u6703\u6709\u8ca0\u6578\uff0c\u7528 long long \u4f3c\u4e4e\u56e0\u70ba\u8ca0\u6578\u6703\u5c0e\u81f4hash\u932f\uff0c\u6240\u4ee5\u8981\u52a0 n \u4f7f\u5f97 hash \u975e\u8ca0\u6578</p> </li> </ul> </li> </ul>"},{"location":"contest/leetcode/2025/#q4-sum-of-perfect-square-ancestors","title":"Q4. Sum of Perfect Square Ancestors","text":"<ul> <li>tag: \u5e73\u65b9\u5269\u9918\u548c\u9810\u8655\u7406</li> </ul> Details <ul> <li> <p>Thought in the contest:</p> <p>\u9019\u984c\u56f0\u96e3\u9ede\u5728\u5982\u4f55\u63d0\u53d6\u51fa\u5e73\u65b9\u5269\u9918\u548c\uff0c\u4e5f\u5c31\u662f\u5947\u6578\u6b21\u65b9\u7684\u4e58\u7a4d\u3002</p> </li> <li> <p>Solution:</p> <p>\u8981\u7528\u985e\u4f3c\u57c3\u5f0f\u7be9\u7684\u65b9\u5f0f\u8a08\u7b97</p> </li> <li> <p>\u985e\u4f3c\u984c\u76ee:</p> <ul> <li> <p>\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u7956\u5148\u4e2a\u6570\u603b\u548c</p> </li> <li> <p>\u5b8c\u5168\u5b50\u96c6\u7684\u6700\u5927\u5143\u7d20\u548c</p> </li> </ul> </li> </ul>"},{"location":"contest/leetcode/2025/#weekly-contest-472","title":"Weekly contest #472","text":"<p>Q1. Smallest Missing Multiple of K</p> Details <p>\u56e0\u70ba\u7c97\u5fc3 wa \u4e00\u767c</p> <ul> <li>\u6c92\u5229\u7528\u6975\u503c\u6e2c\u8a66</li> </ul> <p>Q2. Longest Balanced Subarray I</p> Details <ul> <li>\u8981\u5beb\u66b4\u529b\u7684\u8a71\uff0c\u5c31\u5beb\u55ae\u7d14\u7684\u65b9\u6cd5\u5c31\u597d\uff0c\u4e0d\u8981\u82b1\u529b\u6c23\u53bb\u60f3\u8907\u96dc\u7684\u65b9\u6cd5</li> <li>\u901f\u5ea6\u592a\u6162</li> </ul> <p>Q3. Lexicographically Smallest Permutation Greater Than Target</p> Details <p>\u9019\u984c\u6709\u6293\u5230\u554f\u984c\u7684\u672c\u8cea\uff0c\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8a71\u5c31\u8981\u6cbf\u8457\u76ee\u6a19\u5b57\u4e32\u69cb\u9020\uff0c\u4e00\u4f46\u6709\u7121\u6cd5\u69cb\u9020\u7684\u90e8\u5206\u5c31\u662f\u5f9e\u90a3\u500b\u4f4d\u7f6e\u958b\u59cb\u69cb\u9020\u3002</p> <ul> <li>\u5c11\u60f3\u4e00\u500b\u908a\u754c\u503c wa \u4e86\u4e00\u767c\uff0c\u9806\u5e8f\u904e\u53bb\u627e\u5230\u95dc\u9375\u4f4d\u7f6e\u5f8c\u8981\u5f80\u56de\u8d70\uff0c\u985e\u4f3c\u53cd\u6094\u8caa\u5fc3\u3002</li> </ul> <p>Q4. Longest Balanced Subarray II</p> Details <p>\u9019\u984c\u8ddf\u4e0a\u79ae\u62dc\u7684\u5f88\u985e\u4f3c\uff0c\u90fd\u662f\u5229\u7528 +1/-1 \u524d\u7db4\u548c\u70ba 0 \u7684\u6027\u8cea\u627e\u500b\u6578\u76f8\u7b49\u7684\u5b50\u5340\u9593\uff0c\u4f46\u662f\u5c0d\u65bc\u91cd\u8907\u5143\u7d20\u7684\u90e8\u5206\u7121\u6cd5\u8003\u616e\u6e05\u695a\uff0c\u6bd4\u8cfd\u7684\u6642\u5019\u5361\u5728\u9019\u90e8\u5206\u3002</p> <p>\u8b1b\u89e3</p> <p>\u6709\u60f3\u5230\u5c0d\u65bc\u91cd\u8907\u5143\u7d20\u61c9\u8a72\u4f7f\u5f97\u5176\u8ca2\u737b\u70ba 0, \u4f46\u662f\u6211\u4f7f\u7528\u7684\u60f3\u6cd5\u662f\u5c0d\u65bc\u7b2c\u4e00\u500b\u51fa\u73fe\u7684\u5143\u7d20 +1 or -1 \u9019\u6703\u5c0e\u81f4\u5c0d\u65bc\u524d\u7db4\u548c\u7121\u6cd5\u5f97\u5230\u5c0d\u61c9\u7684\u5340\u9593 -&gt; \u554f\u984c\u6240\u5728</p> <ul> <li>\u96d6\u7136\u6709\u89c0\u5bdf\u5230\u5c0d\u65bc\u91cd\u8907\u5143\u7d20\u5982\u679c\u53ef\u4ee5\u9078\uff0c\u90a3\u61c9\u8a72\u8d8a\u591a\u8d8a\u597d -&gt; \u60f3\u5230\u9019\u500b\u61c9\u8a72\u8981\u60f3\u5230\u54ea\u4e00\u500b\u5143\u7d20\u7576\u7b2c\u4e00\u500b\u5143\u7d20\u6bd4\u8f03\u9069\u5408?</li> <li>\u5728\u524d\u7db4\u548c\u7684\u6846\u67b6\u4e0b\u6211\u5011\u6703\u4e0d\u65b7\u7684\u679a\u8209\u53f3\u7aef\u9ede\uff0c\u6b64\u6642\u5c0d\u65bc\u5b50\u5340\u9593\u6703\u9020\u6210\u8ca2\u737b\u7684\u662f\u7b2c\u4e00\u500b\u51fa\u73fe\u7684\u5143\u7d20\uff0c\u4e4b\u5f8c\u51fa\u73fe\u7684\u91cd\u8907\u5143\u7d20\u5c0d\u65bc\u524d\u7db4\u548c\u61c9\u7576\u90fd\u662f 0\u3002</li> <li>\u63a5\u8457\u5c31\u6703\u5e36\u5230\uff0c\u5982\u679c\u5411\u53f3\u679a\u8209\u51fa\u73fe\u4e00\u500b\u91cd\u8907\u5143\u7d20\uff0c\u90a3\u5fc5\u9808\u628a\u9019\u500b\u5143\u7d20\u7576\u6210\u7b2c\u4e00\u500b\u5143\u7d20\uff0c\u5de6\u908a\u7684\u5176\u4ed6\u5143\u7d20\u7684\u8ca2\u737b\u61c9\u8a72\u6539\u70ba 0  -&gt; \u8981\u505a\u5340\u9593\u4fee\u6539\u7684\u64cd\u4f5c -&gt; \u7dda\u6bb5\u6a39/BIT</li> <li>\u63a5\u8457\u6211\u5011\u60f3\u627e\u5340\u9593\u5408\u70ba 0 \u7684\u524d\u7db4\u548c\u4f4d\u7f6e -&gt; \u7dda\u6bb5\u6a39\u4e8c\u5206 -&gt; \u7528 {min, max} \u8868\u9054\u5340\u9593\u5167\u7684\u6700\u5927\u6700\u5c0f\u503c(\u56e0\u70ba\u524d\u7db4\u548c\u503c\u7684\u8b8a\u5316\u662f\u6574\u6578\u9023\u7e8c\u7684) -&gt; lazy \u7dda\u6bb5\u6a39</li> </ul> <p>\u984c\u76ee:     * HH \u7684\u9879\u94fe</p>"},{"location":"dp/digits_counting/","title":"Digits counting","text":"<p>Digits counting</p> <ul> <li>from high bit to low bit</li> </ul> <pre><code>// ref: https://leetcode.cn/discuss/post/tXLS3i/\n// \u4ee3\u7801\u793a\u4f8b\uff1a\u8fd4\u56de [low, high] \u4e2d\u7684\u6070\u597d\u5305\u542b target \u4e2a 0 \u7684\u6570\u5b57\u4e2a\u6570\n// \u6bd4\u5982 digitDP(0, 10, 1) == 2\n// \u8981\u70b9\uff1a\u6211\u4eec\u7edf\u8ba1\u7684\u662f 0 \u7684\u4e2a\u6570\uff0c\u9700\u8981\u533a\u5206\u3010\u524d\u5bfc\u96f6\u3011\u548c\u3010\u6570\u5b57\u4e2d\u7684\u96f6\u3011\uff0c\u524d\u5bfc\u96f6\u4e0d\u80fd\u8ba1\u5165\uff0c\u800c\u6570\u5b57\u4e2d\u7684\u96f6\u9700\u8981\u8ba1\u5165\nint digitDP(int low, int high, int target) {\n    string low_s = to_string(low);\n    string high_s = to_string(high);\n    int n = high_s.size();\n    int diff_lh = n - low_s.size();\n    vector memo(n, vector&lt;int&gt;(target + 1, -1));\n\n    auto dfs = [&amp;](this auto&amp;&amp; dfs, int i, int cnt0, bool limit_low, bool limit_high) -&gt; int {\n        if (cnt0 &gt; target) {\n            return 0; // \u4e0d\u5408\u6cd5\n        }\n        if (i == n) {\n            return cnt0 == target;\n        }\n\n        if (!limit_low &amp;&amp; !limit_high &amp;&amp; memo[i][cnt0] &gt;= 0) {\n            return memo[i][cnt0];\n        }\n\n        int lo = limit_low &amp;&amp; i &gt;= diff_lh ? low_s[i - diff_lh] - '0' : 0;\n        int hi = limit_high ? high_s[i] - '0' : 9;\n\n        int res = 0;\n        int d = lo;\n        // \u901a\u8fc7 limit_low \u548c i \u53ef\u4ee5\u5224\u65ad\u80fd\u5426\u4e0d\u586b\u6570\u5b57\uff0c\u65e0\u9700 is_num \u53c2\u6570\n        // \u5982\u679c\u524d\u5bfc\u96f6\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u53bb\u6389\u8fd9\u4e2a if block\n        if (limit_low &amp;&amp; i &lt; diff_lh) {\n            // \u4e0d\u586b\u6570\u5b57\uff0c\u4e0a\u754c\u4e0d\u53d7\u7ea6\u675f\n            res = dfs(i + 1, cnt0, true, false);\n            d = 1;\n        }\n        for (; d &lt;= hi; d++) {\n            // \u7edf\u8ba1 0 \u7684\u4e2a\u6570\n            res += dfs(i + 1, cnt0 + (d == 0), limit_low &amp;&amp; d == lo, limit_high &amp;&amp; d == hi);\n            // res %= MOD;\n        }\n\n        if (!limit_low &amp;&amp; !limit_high) {\n            memo[i][cnt0] = res;\n        }\n        return res;\n    };\n\n    int ans = dfs(0, 0, true, true);\n    return ans;\n}\n</code></pre> <ul> <li> <p>from low bit to high bit</p> <ul> <li> <p>Count No-Zero Pairs That Sum to</p> <ul> <li>contest review</li> </ul> </li> <li> <p>F. Jee, You See?</p> </li> </ul> </li> </ul>"},{"location":"greedy/greedy/","title":"Greedy","text":""},{"location":"greedy/greedy/#median","title":"Median","text":""},{"location":"greedy/greedy/#_1","title":"\u4e2d\u4f4d\u6578\u8caa\u5fc3","text":"<ul> <li> <p>\u4e2d\u4f4d\u6578\u8caa\u5fc3\u53ca\u5176\u8b49\u660e</p> </li> <li> <p>\u7c21\u55ae\u8b49\u660e - \u525d\u6d0b\u8525\u6cd5</p> </li> <li> <p>problem:</p> </li> </ul>"},{"location":"greedy/greedy/#median-alignment","title":"Median alignment (\u4e2d\u4f4d\u6578\u5c0d\u9f4a\u554f\u984c)","text":"<ul> <li> <p>problem:</p> <ul> <li> <p>Minimum Adjacent Swaps for K Consecutive Ones</p> </li> <li> <p>D. A and B</p> </li> </ul> </li> </ul>"},{"location":"math/number_theory/","title":"Number theory","text":""},{"location":"math/number_theory/#_1","title":"\u5224\u65b7\u8cea\u6578","text":"<ul> <li>\\(O(\\sqrt{n})\\)</li> </ul> <pre><code>bool isPrimes(int n){\n    if(n == 1) return false;\n    for(int i = 2; i*i&lt;=n;++i){\n        if(n % i == 0) return false;\n    }\n    return true;\n}\n</code></pre>"},{"location":"math/number_theory/#seieve-of-prime","title":"Seieve of prime","text":"<ul> <li> <p>\u57c3\u5f0f\u7be9</p> </li> <li> <p>\\(O(n\\log{\\log{(n)}})\\)</p> </li> </ul> <pre><code>// Find all primes &lt;= n.\nvector&lt;int&gt; prime;\nbool is_prime[N];\nvector&lt;int&gt;Eratosthenes(int n)\n{\n        is_prime[0] = is_prime[1] = false;\n      for(int i = 2; i &lt;= n; ++i) is_prime[i] = true;\n\n    for(int i = 2; i &lt;= n; ++i) {\n            if(is_prime[i])\n                  for (int j = i * i; j &lt;= n; j += i) is_prime[j] = false;\n      }       \n      for(int i = 2; i &lt;= n; ++i)\n         if (is_prime[i]) prime.push_back(i);\n}\n</code></pre> <ul> <li> <p>\u6839\u865f\u512a\u5316</p> </li> <li> <p>\\(O(n\\ln{\\ln{\\sqrt{n}}})\\)</p> </li> </ul> <pre><code>vector&lt;int&gt; prime;\nbool is_prime[N];\n\nvoid Eratosthenes(int n) {\n  is_prime[0] = is_prime[1] = false;\n  for (int i = 2; i &lt;= n; ++i) is_prime[i] = true;\n  // i * i &lt;= n \u8bf4\u660e i &lt;= sqrt(n)\n  for (int i = 2; i * i &lt;= n; ++i) {\n    if (is_prime[i])\n      for (int j = i * i; j &lt;= n; j += i) is_prime[j] = false;\n  }\n  for (int i = 2; i &lt;= n; ++i)\n    if (is_prime[i]) prime.push_back(i);\n}\n</code></pre>"},{"location":"math/number_theory/#prim-factorization","title":"\u8cea\u56e0\u6578\u5206\u89e3\u9810\u8655\u7406(Prim factorization)","text":"<ul> <li>\u4e00\u5b9a\u8981\u7528\u9019\u500b\u65b9\u5f0f\u5beb \\(\\sqrt{n}\\) \u7684\u512a\u5316\u53ea\u80fd\u7528\u5728\u7be9\u6cd5\uff0c\u4e0d\u7136\u6703\u6f0f\u6389 \\(\\ge \\sqrt{n}\\)</li> </ul> <pre><code>const int MX = 100'000;\nvector&lt;int&gt; prime_factor[MX + 10];\nauto init = []() {\n    for(int i = 2; i &lt;= MX; ++i) {\n        if(prime_factor[i].empty()) {\n            for(int j = i; j &lt;= MX; j += i) {\n                    prime_factor[j].push_back(i);\n            }\n        }\n\n    }\n    return 0;\n}();\n</code></pre>"},{"location":"math/number_theory/#_2","title":"\u9810\u8655\u7406\u5f97\u5230\u6240\u6709\u56e0\u6578","text":"<ul> <li>\\(O(n\\log{(n)})\\)</li> </ul> <pre><code>const int MX = 100'001;\nvector&lt;int&gt; divisors[MX];\n\nint init = [] {\n    // \u9884\u5904\u7406\u6bcf\u4e2a\u6570\u7684\u56e0\u5b50\n    for (int i = 1; i &lt; MX; i++) {\n        for (int j = i; j &lt; MX; j += i) {\n            divisors[j].push_back(i);\n        }\n    }\n    return 0;\n}();\n</code></pre>"},{"location":"math/number_theory/#_3","title":"\u5e73\u65b9\u5269\u9918\u548c\u9810\u8655\u7406","text":"<ul> <li>\u4e5f\u5c31\u662f\u8aaa\u6b21\u65b9\u9805\u70ba\u5947\u6578\u7684\u4e58\u7a4d</li> </ul> <pre><code>const int MX = 1'000'00;\nint core[MX + 1];\n\nauto init = []() {\n    memset(core, 0, sizeof(core));\n\n    for(int i = 1; i &lt;= MX; ++i) {\n        if(core[i] == 0) {\n            for(int j = 1; i * j * j &lt;= MX; ++j) {\n                core[i * j * j] = i;\n            }\n        }\n    }\n    return 0;\n}();\n</code></pre> <ul> <li> <p>\u985e\u4f3c\u984c\u76ee:</p> <ul> <li> <p>\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u7956\u5148\u4e2a\u6570\u603b\u548c</p> </li> <li> <p>\u5b8c\u5168\u5b50\u96c6\u7684\u6700\u5927\u5143\u7d20\u548c</p> </li> </ul> </li> </ul>"},{"location":"problems/codeforces/","title":"Codeforces","text":""},{"location":"problems/codeforces/#practice-round-1052","title":"Practice Round #1052","text":"<p>A. Equal Occurrences</p>"},{"location":"problems/codeforces/#b-merging-the-sets","title":"B. Merging the Sets","text":"Details <ul> <li> <p>Thought in the contest:     \u9019\u984c\u4e00\u958b\u59cb\u5f88\u5bb9\u6613\u5730\u60f3\u5230\u5982\u679c\u53ea\u6709\u4e00\u500b \\(S_i\\) \u6709\u552f\u4e00\u7684\u4e00\u500b\u6578\u90a3\u9019\u500b \\(S_i\\) \u80af\u5b9a\u662f\u8981\u9078\u7684\uff0c\u6240\u4ee5\u60f3\u5230\u4e86\u82e5\u662f\u628a\u9019\u4e9b\u5fc5\u9808\u9078\u7684 \\(S_i\\) \u6311\u51fa\u4f86\uff0c\u90a3\u5269\u4e0b\u7684\u90e8\u5206\u5c31\u770b\u53ef\u4e0d\u53ef\u4ee5\u69cb\u9020\u51fa\u7b54\u6848\u3002 -&gt; \u6b63\u5411\u7684\u601d\u7dad</p> <p>\u4f46\u662f\u9019\u88e1\u5f88\u5feb\u5c31\u6703\u78b0\u5230\u74f6\u9838\uff0c\u82b1\u4e86\u5f88\u591a\u6642\u9593\u601d\u8003\u5982\u4f55\u69cb\u9020\u51fa\u4e09\u7a2e\u4ee5\u4e0a\u7684\u65b9\u6848\uff0c\u7136\u5f8c\u60f3\u5230\u4e86\u82e5\u662f\u6709\u65b9\u6848 A\uff0c\u548c\u65b9\u6848 B \uff0c\u5247\u53ef\u4ee5\u4f7f\u7528 A + B \u69cb\u9020\u51fa\u7b2c\u4e09\u7a2e\u65b9\u6848\u3002 \u63a5\u8457\u662f\u5982\u4f55\u69cb\u9020\u51fa\u5169\u7a2e\u4e0d\u540c\u7684\u65b9\u6848\uff0c\u9019\u88e1\u82b1\u4e86\u5f88\u4e45\u7684\u6642\u9593\u624d\u60f3\u5230\uff0c\u628a\u5269\u4e0b\u7684\u5143\u7d20\u5254\u9664\u5fc5\u9078\u7684 \\(S_i\\)\uff0c\u4e26\u8a08\u7b97\u5269\u4e0b\u5143\u7d20\u6709\u591a\u5c11\u53ef\u9078\u7684 \\(S_j\\) \u53ea\u8981\u6709\u4e00\u500b\u5143\u7d20 &gt;= 2 \u5247\u53ef\u4ee5\u69cb\u9020\u51fa\u4e09\u7a2e\u4ee5\u4e0a\u7684\u65b9\u6848\u3002</p> <p>\u82b1\u592a\u591a\u6642\u9593\u601d\u8003\u5982\u4f55\u62c6\u5206\u6210\u5169\u500b\u4ee5\u4e0a\u7684\u65b9\u6848</p> </li> <li> <p>Solution:</p> <p>\u5b98\u89e3\u70ba\u8a08\u7b97\u9078\u64c7 n - 1 \u548c n \u500b S \u7684\u65b9\u6848\u6709\u591a\u5c11\u500b\uff0c\u9019\u500b\u6bd4\u8f03\u50cf\u662f\u9006\u5411\u601d\u7dad\uff0c\u4e00\u958b\u59cb\u60f3\u5230\u5982\u679c\u5168\u9078\u7684\u8a71\u5c31\u53ef\u4ee5\u77e5\u9053\u53ef\u4e0d\u53ef\u80fd\u69cb\u9020\u51fa\u89e3\u7b54\uff0c\u7136\u5f8c\u60f3\u5230\u53ea\u9700\u8981\u69cb\u9020\u51fa\u65b9\u6848 A, B, A + B \u5c31\u597d\uff0c\u56e0\u6b64\u82e5\u662f\u79fb\u9664\u4e00\u500b S \u5c31\u770b\u770b\u662f\u5426\u4ecd\u7136\u53ef\u4ee5\u69cb\u9020\u51fa\u7b54\u6848\uff0c\u8a08\u7b97 n - 1 \u500b S \u80fd\u69cb\u9020\u51fa\u7b54\u6848\u7684\u6709\u5e7e\u500b\u3002</p> </li> </ul> <p>C. Wrong Binary Search</p> <p>D. Max Sum OR (Easy Version)</p>"},{"location":"problems/codeforces/#practice-round-1053-div2","title":"Practice Round #1053 (Div.2)","text":"<p>A. - Incremental Subarray</p>"},{"location":"problems/codeforces/#b-incremental-path","title":"B. Incremental Path","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u9019\u984c\u6c92\u6709\u5f88\u597d\u7684\u60f3\u6cd5\u3002</p> </li> <li> <p>Solution:</p> <p>\u4f3c\u4e4e\u662f\u8981\u4f7f\u7528\u6a21\u64ec\u7bc4\u4f8b\u4f86\u89c0\u5bdf\u5982\u4f55\u5f97\u5230\u7b54\u6848\u3002\u95dc\u6ce8\u9ede\u61c9\u8a72\u662f i-th \u548c (i - 1)-th \u5982\u4f55\u8b8a\u5316</p> </li> </ul>"},{"location":"problems/codeforces/#c-incremental-stay","title":"C. Incremental Stay","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u4e00\u958b\u59cb\u4e5f\u662f\u7528\u8caa\u5fc3\u7684\u60f3\u6cd5\uff0c\u4f46\u662f\u6c92\u6709\u627e\u5230\u5c0d\u7684\u65b9\u5411\u60f3\u3002</p> </li> <li> <p>Solution:</p> <p>\u5982\u679c\u8981\u4f7f\u5f97\u7b54\u6848\u6700\u5927\uff0c\u90a3\u5fc5\u9808\u76e1\u91cf\u8b93 k \u500b\u4eba\u5f85\u5728\u535a\u7269\u9928\u88e1\uff0c\u6240\u4ee5\u524d k \u500b\u6642\u9593\u9ede\u5fc5\u9808\u662f\u9032\u5165\uff0c\u6700\u5f8c k \u500b\u6642\u9593\u9ede\u80af\u5b9a\u662f\u96e2\u958b\u3002\u5982\u679c\u6709\u6293\u5230\u9019\u500b\u60f3\u6cd5\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u524d\u7db4\u548c\u8a08\u7b97\u6240\u9700\u6642\u9593\uff0c\u4f46\u662f\u5c0d\u65bc k \u500b\u6642\u9593\u9ede\u5f8c\u5fc5\u9808\u662f out in out in \u9019\u7a2e\u6392\u5217\uff0c\u6bcf\u6b21\u589e\u52a0\u4e00\u500b\u4eba\u90fd\u6703\u4f7f\u5f97 in -&gt; out , out -&gt; in\uff0c\u6240\u4ee5\u53ef\u4ee5\u5229\u7528\u9019\u500b\u7279\u6027 * -1\uff0c\u6211\u89ba\u5f97\u4e00\u958b\u59cb\u53ef\u4ee5\u5148\u770b\u6bcf\u500b\u6642\u9593\u9ede\u5982\u4f55\u5c0d\u7b54\u6848\u9032\u884c\u8ca2\u737b\uff0c\u6bcf\u500b\u6642\u9593\u9ede\u53ef\u4ee5\u8ca2\u737b + or - \u69cb\u9020\u51fa\u6700\u5f8c\u7b54\u6848\u3002</p> <p>\u53ef\u4ee5\u53c3\u8003\u9019\u500b\u5beb\u6cd5\u5b78\u7fd2\u4e00\u4e0b\u600e\u9ebc\u5beb\u6bd4\u8f03\u6f02\u4eae code</p> </li> </ul>"},{"location":"problems/codeforces/#d-grid-counting","title":"D. Grid Counting","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u5b8c\u5168\u6c92\u6709\u7406\u89e3\u984c\u76ee\uff0c\u9084\u9700\u8981\u591a\u719f\u6089\u95b1\u8b80\u984c\u76ee\u3002</p> </li> <li> <p>Solution:</p> <p>\u53c3\u8003\u89e3\u8aaa</p> <p>\u53ef\u4ee5\u5148\u8003\u616e\u628a\u984c\u76ee\u7684\u5716\u756b\u51fa\u4f86\u770b\u770b</p> <p>\u6bcf\u500b\u6b04\u4f4d\u5206\u5225\u5c0d\u61c9:</p> <p>\\(max(x, y) = k / max(x, n + 1 - y) = k\\) </p> x \\ y 1 2 3 4 5 1 1 // 5 2 // 4 3 // 3 4 // 2 5 // 1 2 2 // 5 2 // 4 3 // 3 4 // 2 5 // 2 3 3 // 5 3 // 4 3 // 3 4 // 3 5 // 3 4 4 // 5 4 // 4 4 // 4 4 // 4 5 // 4 5 5 // 5 5 // 5 5 // 5 5 // 5 5 // 5 <p>\u53ef\u4ee5\u767c\u73fe:</p> <ul> <li> <p>\u7576 max(x, y) = 1, \u6642\u6211\u5011\u53ea\u6709 (1, 1) \u53ef\u4ee5\u9078\u64c7 -&gt; \u6b64\u6642 max(1, 1) = 1, max(1, 5 + 1 - 1) = 5</p> </li> <li> <p>\u7576 max(x, n + 1 - y) = 1, \u6642\u6211\u5011\u53ea\u6709 (1, 5) \u53ef\u4ee5\u9078\u64c7 -&gt; \u6b64\u6642 max(1, 5) = 5, max(1, 5 + 1 - 5) = 1</p> </li> </ul> <p>\u90a3\u6211\u5011\u53ef\u4ee5\u806f\u60f3\u5230\u61c9\u8a72\u662f\u8981\u9078\u64c7\u9ede \\((x_i, y_i)\\) \u4f7f\u5f97</p> <ul> <li>\\(max(x_i, y_i) = 1, 2, 3, 4, 5\\)</li> <li>\\(max(x_i, n + 1 - y_i)\\) = 1, 2, 3, 4, 5</li> </ul> <p>\u9078 (1, 1) \u6642\u6703\u4f7f\u5f97\u5269\u4e0b\u9019\u4e9b\u8981\u88ab\u9078</p> <ul> <li>\\(max(x_i, y_i) = \\textcolor{red}{1}, 2, 3, 4, 5\\)</li> <li>\\(max(x_i, n + 1 - y_i) = 1, 2, 3, 4, \\textcolor{red}{5}\\)</li> </ul> <p>\u6b64\u6642 \\(max(x_i, n + 1 - y_i) = 5\\) \u6703\u4f7f\u5f97 \u6240\u6709 \\(max(x_i, n + 1 - y_i) = 5\\) \u90fd\u4e0d\u80fd\u88ab\u9078\u64c7</p> <p>\u9078 (1, 5) \u6642\u6703\u4f7f\u5f97\u5269\u4e0b\u9019\u4e9b\u8981\u88ab\u9078</p> <ul> <li>\\(max(x_i, y_i) = \\textcolor{red}{1}, 2, 3, 4, \\textcolor{yellow}{5}\\)</li> <li>\\(max(x_i, n + 1 - y_i) = \\textcolor{yellow}{1}, 2, 3, 4, \\textcolor{red}{5}\\)</li> </ul> <p>\u6b64\u6642 \\(max(x_i, y_i) = 5\\) \u6703\u4f7f\u5f97 \u6240\u6709 \\(max(x_i, n + 1 - y_i) = 5\\) \u90fd\u4e0d\u80fd\u88ab\u9078\u64c7</p> <p>\u4ee5\u6b64\u985e\u63a8\u6211\u5011\u53ef\u4ee5\u5f97\u5230\u9019\u5f35\u5716</p> <p></p> <p>\u53ef\u4ee5\u767c\u73fe\u9078\u5b8c k = 1, k = 5 \u5f8c \u53ea\u5269 (1, 2), (2, 2) \u53ef\u4ee5\u9078\uff0c\u800c\u9078\u5b8c\u9019\u5169\u500b\u5176\u4e2d\u4e00\u500b\u5f8c\u53ea\u80fd\u9078 (1, 4), (2, 4) \u6b64\u6642\u6703\u5269\u4e0b</p> <ul> <li>\\(max(x_i, y_i) = \\textcolor{red}{1}, \\textcolor{green}{2}, 3, \\textcolor{green}{4}, \\textcolor{yellow}{5}\\)</li> <li>\\(max(x_i, n + 1 - y_i) = \\textcolor{yellow}{1}, \\textcolor{green}{2}, 3, \\textcolor{green}{4}, \\textcolor{red}{5}\\)</li> </ul> <p>\u6240\u4ee5\u53ef\u4ee5\u77e5\u9053\u80fd\u9078\u7684\u53ea\u6709\u5716\u4e0a\u5708\u8d77\u4f86\u7684\u5730\u65b9\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528\u7d44\u5408\u6578\u8a08\u7b97\u7b54\u6848</p> <ul> <li>\u5be6\u4f5c\u7684\u6642\u5019\u6709\u4e00\u500b\u932f\u8aa4\u5361\u5f88\u4e45\uff0c\u539f\u56e0\u662f\u5728\u8b80\u53d6\u7b54\u6848\u7684\u6642\u5019\uff0c\u5224\u65b7\u4e0d\u5408\u6cd5\u6642\u76f4\u63a5\u8fd4\u56de\u4f7f\u5f97\u6c92\u6709\u8655\u7406\u5b8c\u5168\u90e8\u8f38\u5165 -&gt; \u4ee5\u5f8c\u5728\u8655\u7406\u8f38\u5165\u6642\u8655\u7406\u6771\u897f\u7684\u8a71\u8981\u8b93\u5168\u90e8\u8f38\u5165\u90fd\u5b8c\u6210\u624d\u884c\uff0c\u4e0d\u80fd\u4e2d\u9014\u8fd4\u56de</li> <li>\u8981\u4f7f\u5f97 1 &lt;= k &lt;= n \u90fd\u6070\u597d\u6709\u4e00\u500b\u7684\u8a71\uff0c\u5fc5\u9808\u4f7f sum(a) == n \u6bd4\u9019\u591a\u6216\u5c11\u90fd\u6703\u4f7f\u5f97 n \u4e0d\u5408\u6cd5</li> </ul> </li> </ul>"},{"location":"problems/codeforces/#practice-round-1054-div3","title":"Practice Round #1054 (Div.3)","text":"<p>A. Be Positive</p> <p>B. Unconventional Pairs</p> <p>C. MEX rose</p>"},{"location":"problems/codeforces/#d-a-and-b","title":"D. A and B","text":"Details <ul> <li> <p>Thought in the contest:</p> <p>\u9019\u500b\u984c\u76ee\u662f\u7d93\u5178\u7684\u4e2d\u4f4d\u6578\u5c0d\u9f4a\u984c\u76ee\uff0c\u4e00\u958b\u59cb\u6211\u7684\u60f3\u6cd5\u662f\u5c07 a / b \u8f49\u63db\u6210 0, 1 \u601d\u8003\uff0c\u4e26\u4e14\u601d\u8003\u53ea\u9700\u8981\u679a\u8209\u4e00\u534a\u7684\u60c5\u6cc1\uff0c\u53e6\u4e00\u534a\u53ef\u4ee5\u5c07 a, b \u4ea4\u63db\u7136\u5f8c\u518d\u6b21\u91cd\u8986\u8a08\u7b97\u5c31\u53ef\u4ee5\u5f97\u5230\u53e6\u4e00\u534a\uff0c\u4e00\u958b\u59cb\u60f3\u7684\u662f\u5c0d\u65bc\u679a\u8209\u6240\u6709\u7684\u60c5\u6cc1 \uff0c\u5de6\u908a\u7684 a \u7684\u500b\u6578\u6703\u5f9e \\([0, cnt_a]\\) \u8b8a\u5316\uff0c\u800c\u53ea\u8981\u80fd\u5920 \\(O(1)\\) \u6216\u662f \\(O(\\log{N})\\) \u5f97\u5230 cost\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002</p> <p>\u7576\u5df2\u77e5\u5de6\u53f3\u7684 a \u7684\u500b\u6578 \\(left_a, right_a\\) \u6642\u6211\u5011\u53ef\u4ee5\u5f97\u5230\u5c0d\u61c9\u7684\u76ee\u6a19\u5340\u9593 \\([l, r]\\)\uff0c\u5229\u7528\u524d\u7db4\u548c\u5206\u5225\u53ef\u4ee5\u77e5\u9053 \\([0, l), (r, 0]\\) \u7684 b \u7684\u4e0b\u6a19\u8ca2\u737b\u3002\u6b64\u6642\u5c0d\u65bc \\([l, r]\\) \u4e2d\u7684 a \u4e0b\u6a19\u8ca2\u737b\u8981\u5206\u6210\u5169\u90e8\u5206\uff0c\u5206\u7d66\u5de6\u534a\u908a\u8ddf\u5206\u7d66\u53f3\u534a\u908a\uff0c\u9019\u88e1\u6211\u4f7f\u7528\u4e8c\u5206 lower_bound \u627e\u5230 \\(\\le l\\) \u7684\u7b2c\u4e00\u500b a \u958b\u59cb\u7684\u4e0b\u6a19\uff0c\u4f7f\u7528\u524d\u7db4\u548c\u8a08\u7b97\u5206\u7d66\u5de6\u53f3\u5169\u908a\u7684\u8ca2\u737b\u3002</p> <ul> <li> <p>\u7406\u8ad6\u4e0a\u9019\u500b\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u6307\u91dd\u7684\u65b9\u5f0f\u5f97\u5230 \\(\\le l\\) \u7684\u7b2c\u4e00\u500b a \u958b\u59cb\u7684\u4e0b\u6a19\uff0c\u4f46\u662f\u7576\u6642\u601d\u8003\u592a\u6df7\u96dc\u6c7a\u5b9a\u7528 lower_bound \u7c21\u5316\u8655\u7406\u3002</p> </li> <li> <p>\u4e00\u958b\u59cb\u5176\u5be6\u6709\u60f3\u5230\u8981\u4f7f\u7528\u4e0b\u6a19 \\(a_i - t_i\\) \u65b9\u5f0f\u51fa\u767c\uff0c\u4f46\u662f\u60f3\u5230\u8a08\u7b97\u6703\u6709\u8ca0\u6578\u6642\u5361\u4f4f\u4e86\uff0c\u6c92\u6709\u7e7c\u7e8c\u5f80\u4e0b\u8d70\uff0c\u61c9\u8a72\u53ef\u4ee5\u7e7c\u7e8c\u7684\u4f46\u662f\u601d\u8003\u65b9\u5f0f\u4e0d\u592a\u5c0d\uff0c\u52a0\u4e0a\u7d55\u5c0d\u503c\u6709\u6a5f\u6703\u53ef\u4ee5\u5f80\u4e0b\u8d70</p> </li> </ul> <p>code</p> </li> <li> <p>Solution:</p> <ol> <li> <p>\u5b98\u65b9\u89e3\u7b54\u70ba\u76ee\u6a19 subarray \u958b\u59cb\u7684\u7b2c\u4e00\u500b\u4e0b\u6a19\u70ba \\(t_0\\)\uff0c\u6240\u4ee5\u7b54\u6848\u70ba \\(\\sum{|a_i - (t_0 + i)|}\\)\uff0c\u79fb\u9805\u5f8c\u53ef\u4ee5\u5f97\u5230 \\(\\sum{|(a_i - i) - t_0|} = \\sum{|F_i - t_0|} \\text{, for } F_i = a_i - i\\)\uff0c\u53ef\u4ee5\u770b\u6210\u5728\u4e00\u5806\u65b0\u5ea7\u6a19 \\(F_i\\) \u4e2d \u6211\u5011\u8981\u6e1b\u53bb\u4e00\u500b\u5ea7\u6a19\u5f97\u5230\u6700\u5c0f\u503c \\(min(\\sum{|F_i - t_0|})\\)\uff0c\u9019\u662f\u7d93\u5178\u7684\u4e2d\u4f4d\u6578\u8caa\u5fc3(\u6216\u662f\u9019\u7a2e\u984c\u76ee\u53ef\u4ee5\u53eb\u4e2d\u4f4d\u6578\u5c0d\u9f4a)</p> <ul> <li>code</li> </ul> </li> <li> <p>\u53e6\u4e00\u7a2e\u66f4\u70ba\u76f4\u89c0\u7684\u8caa\u5fc3\u60f3\u6cd5\uff0c\u57fa\u672c\u4e0a\u6700\u5c0f\u7684\u958b\u92b7\u70ba\u5c07\u6240\u6709\u7684 a \u6216 b \u5f80\u4e2d\u9593\u805a\u5728\u4e00\u8d77\uff0c\u6240\u4ee5\u6700\u5c0f\u7684\u958b\u92b7\u70ba\u4e2d\u70ba\u6578\u8caa\u5fc3\u7684\u65b9\u5f0f\u8a08\u7b97\u8ca2\u737b \\(\\sum{|a_i - a_{mid}|}\\)\uff0c\u9019\u88e1\u6709\u500b\u5c0f\u9677\u9631\uff0c\u5f80\u4e2d\u9593\u9760\u7684\u6642\u5019\u6bcf\u500b\u5143\u7d20\u90fd\u8981\u4f54\u64da\u4e00\u500b\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8981\u5206\u5225\u6e1b\u53bb\u5c0d\u61c9\u7684\u4f4d\u7f6e\u3002</p> <p>\\(\\sum{|a_i - a_{mid}|} - \\frac{left_a \\times (left_a + 1)}{2} - \\frac{right_a \\times (right_a + 1)}{2}\\)</p> <ul> <li> <p>video</p> </li> <li> <p>code</p> </li> </ul> </li> <li> <p>\u7b2c\u4e09\u7a2e\u60f3\u6cd5\u662f\u770b\u5230 jiazhichen844, exgcd, Misuki\uff0c\u9019\u4e9b\u4eba\u7684\u5beb\u6cd5\u611f\u5230\u597d\u5947\uff0c\u4f46\u662f\u5728\u7db2\u8def\u4e0a\u641c\u7d22\u5f88\u4e45\u4e4b\u5f8c\u5e7e\u4e4e\u627e\u4e0d\u5230\u9019\u7a2e\u505a\u6cd5\u7684\u8b1b\u89e3\uff0c\u9802\u591a\u662f\u53c8\u627e\u5230\u4e86\u5176\u4ed6\u524d\u7db4\u548c\u8a08\u7b97\u8ca2\u737b\u7684\u65b9\u5f0f\u800c\u4e0d\u662f\u9019\u7a2e\u4e00\u6b21\u8a08\u7b97\u6700\u5f8c\u53d6 min \u5f97\u65b9\u5f0f\uff0c\u56e0\u6b64\u5617\u8a66\u4f7f\u7528 CHAT-GPT \u89e3\u91cb\u770b\u770b\u3002</p> <p>\u57fa\u672c\u5f97\u60f3\u6cd5\u662f\u6bcf\u500b\u4f4d\u7f6e i \u6709\u5f80\u5de6\u6216\u5f80\u53f3\u5169\u7a2e\u9078\u64c7\uff0c\u5047\u8a2d\u6211\u5011\u60f3\u69cb\u9020\u51fa\u9023\u7e8c a \u7684 subarray\uff0c\u90a3\u5728\u6bcf\u500b\u4f4d\u7f6e\u7684 b \u90fd\u5fc5\u9808\u5f80\u5de6\u6216\u5f80\u53f3\u79fb\u52d5\uff0c\u5f80\u5169\u5074\u79fb\u52d5\u7684\u958b\u92b7\u53ef\u4ee5\u770b\u4f5c\u8981\u8de8\u8d8a\u591a\u5c11\u7684 a\uff0c\u53d6\u6700\u5c0f\u7684\u958b\u92b7 \\(min(left_a, right_a)\\)\uff0c\u53ef\u4ee5\u5f97\u5230\u5728 b \u4f4d\u7f6e\u4e0a\u7684 cost\uff0c\u6700\u5f8c\u7d2f\u52a0\u6240\u6709 b \u7684 cost \u53ef\u4ee5\u5f97\u5230 \u69cb\u9020\u51fa\u9023\u7e8c a \u7684 subarray \u7684 cost\u3002</p> <p>\u4e00\u500b\u6703\u5361\u4f4f\u7684\u9ede\u662f \u4ee5 ababab \u70ba\u4f8b\u5b50\uff0c\u7b2c\u4e00\u500b b \u7684 \\(cost = min(1, 2) = 1\\)\uff0c\u5f80\u5de6\u7684\u958b\u92b7\u5f88\u76f4\u89c0\u70ba 1\uff0c\u5f80\u53f3\u7684\u958b\u92b7\u537b\u662f 2\uff0c\u770b\u8d77\u4f86\u5f88\u50cf\u932f\u7684\u56e0\u70ba\u770b\u8d77\u4f86\u8d70\u5169\u6b65\u9084\u662f\u7121\u6cd5\u8de8\u904e a \u5230\u9054\u53f3\u5074 ex. a[ ]ab[b]ab\uff0c\u4f46\u662f\u8003\u616e\u5230\u4e0b\u4e00\u500b b \u53ef\u4ee5\u767c\u73fe aba[b]ab \u82e5\u662f\u5148\u5f80\u53f3\u8d70\u53ef\u4ee5\u5230\u9054\u53f3\u5074\u4f7f\u5f97 a \u53ef\u4ee5\u805a\u96c6\u5728\u4e00\u8d77 abaa[b]b\uff0c\u9019\u6642 \u7b2c\u4e00\u500b b \u53ea\u8981\u8d70\u5169\u6b65\u5c31\u53ef\u4ee5\u5230\u9054\u3002</p> <p>\u9019\u500b\u65b9\u6cd5\u53ef\u4ee5\u770b\u6210\u4e0a\u9762\u65b9\u6cd5\u7684\u53cd\u5411\u601d\u8003\uff0c\u601d\u8003\u4e0d\u5408\u6cd5\u7684\u5143\u7d20\u8a72\u5982\u4f55\u79fb\u52d5\u9020\u6210\u7684\u958b\u92b7\u3002</p> <p>\u6bd4\u8f03\u76f4\u89c0\u7684\u60f3\u6cd5\u61c9\u8a72\u662f gpt \u7684\u9019\u500b\u60f3\u6cd5:</p> <p>\u76f8\u9130\u4ea4\u63db\u8981\u8b93 a\uff08\u6216 b\uff09\u6210\u6bb5\uff0c\u7b49\u50f9\u65bc\u8b93\u6bcf\u500b b\uff08\u6216 a\uff09\u5f80\u67d0\u4e00\u5074\u79fb\u5230\u5340\u584a\u5916\uff0c\u4e26\u8de8\u904e\u5fc5\u8981\u7684 a\uff08\u6216 b\uff09\u6b21\u6578\u3002</p> <ul> <li>code</li> </ul> <p>\u5ef6\u4f38\u601d\u8003:     \u6216\u8a31\u53ef\u4ee5\u52a0\u4e0a\u9006\u5e8f\u5c0d\u5e6b\u52a9\u601d\u8003? \u6216\u662f\u5229\u7528\u9006\u5e8f\u5c0d\u8b8a\u6210\u5ef6\u4f38\u984c\u76ee?</p> <pre><code>\u7ed3\u8bba:\n\u4ea4\u6362\u76f8\u90bb\u4e24\u9879\u7684\u6570\u7ec4\u4f7f\u5176\u6709\u5e8f\uff0c\u6240\u8981\u7684\u64cd\u4f5c\u6b21\u6570\u5c31\u662f\u9006\u5e8f\u5bf9\u6570\n</code></pre> </li> </ol> </li> </ul>"},{"location":"problems/leetcode/","title":"Leetcode","text":"problem rating quality date note url name score quality YYYY/MM/DD Commets link 2350. Shortest Impossible Sequence of Rolls 1961 0 2025/10/03 \u6c92\u6709\u5f88\u597d\u7406\u89e3\u984c\u76ee\uff0c\u5c0d\u65bc\u69cb\u9020\u5b50\u5e8f\u5217\u7684\u7406\u89e3\u4e0d\u5920\uff0c\u9019\u984c\u985e\u4f3c #3660 \uff0c\u91cd\u9ede\u61c9\u8a72\u662f\u89c0\u5bdf\u5230\u5fc5\u9808\u5c07\u5143\u7d20\u9032\u884c\u5206\u7d44 link 3660. Jump Game IX 2187 6 2025/10/03 \u505a\u904e\u7684\u984c\u76ee\uff0c\u5206\u6790\u7684\u901f\u5ea6\u4e0d\u5920\u5feb link 517. Super Washing Machines unkown 0 2025/10/07 \u6c92\u6709\u60f3\u5230\u5169\u908a\u96d9\u5411\u64f4\u6563\u7684\u6848\u4f8b\u5403\u4e86\u4e00\u500b WA\uff0c\u4e26\u4e14\u6c92\u6709\u60f3\u5230\u5982\u4f55\u89e3\u3002\u53ef\u4ee5\u5c07\u591a\u7684\u770b\u6210 \u6b63\uff0c\u5c11\u7684\u770b\u6210 \u8ca0\uff0c\u5c0d\u65bc\u4e00\u500b\u5340\u9593\u5167\u82e5\u662f\u6240\u9700 &lt; 0 \u5247\u8868\u793a\u9700\u8981\u5f9e\u5176\u4ed6\u5730\u65b9\u6d41\u5165\uff0c&gt; 0 \u5247\u8868\u793a\u53ef\u4ee5\u5f9e\u9019\u500b\u5340\u9593\u6d41\u51fa link"},{"location":"review/review/","title":"Review","text":""},{"location":"review/review/#math","title":"Math","text":"<ul> <li>Sieve of prime</li> <li>factorization</li> <li>combination</li> <li>Multiplicative Inverse</li> <li>Hash</li> </ul>"},{"location":"review/review/#dp","title":"DP","text":"<ul> <li>Digit counting</li> </ul>"},{"location":"review/review/#string","title":"String","text":"<ul> <li>KMP</li> <li>Z function</li> <li>Palindrome</li> <li>LCP</li> <li>Subsequence Automata</li> <li>String Hash</li> </ul>"},{"location":"review/review/#graph","title":"Graph","text":"<ul> <li>Dijkstra</li> <li>SPFA</li> <li>Eulerian circuit</li> <li>Strongly connected component</li> </ul>"},{"location":"review/review/#tree","title":"Tree","text":"<ul> <li>LCA Binary Lifting</li> <li>Fenwick tree / Binary indexed tree</li> <li>Segment Tree</li> </ul>"},{"location":"review/review/#other","title":"Other","text":"<ul> <li>Lazy Heap</li> <li> <p>Trie</p> </li> <li> <p>kth-element(Qick select)</p> </li> <li> <p>Union Find</p> </li> <li> <p>simplest fraction</p> </li> </ul>"},{"location":"review/review/#binary-search","title":"Binary Search","text":"<ul> <li>https://leetcode.cn/problems/search-a-2d-matrix-ii/solutions/2783938/tu-jie-pai-chu-fa-yi-tu-miao-dong-python-kytg/</li> <li>\u6b63\u5411\u7528\u4e8c\u5206 \u53cd\u5411\u7528\u679a\u8209 3639. \u53d8\u4e3a\u6d3b\u8dc3\u72b6\u6001\u7684\u6700\u5c0f\u65f6\u95f4</li> <li>IEE754</li> </ul>"},{"location":"review/review/#bit","title":"Bit","text":"<ul> <li>subset enumerate</li> <li>low bit</li> <li>including</li> </ul>"},{"location":"stat/leetcode/","title":"Leetcode","text":"Weekly Contest solved total date rating #470 3 4 2025/10/05"},{"location":"todo/list/","title":"Todo list","text":""},{"location":"todo/list/#leetcode","title":"Leetcode","text":"<ul> <li> <p> 1703. Minimum Adjacent Swaps for K Consecutive Ones</p> </li> <li> <p> SegmentTree, LazySegmentTree</p> </li> </ul>"},{"location":"todo/list/#codeforces","title":"Codeforces","text":""},{"location":"todo/list/#wait-to-note","title":"wait to note","text":"<ul> <li> <p> C. MEX rose, round 1054 B, \u4e0d\u7b97\u7c97\u5fc3\uff0c\u7b97\u6c92\u60f3\u5230</p> </li> <li> <p> B. Incremental Path, round 1053 B, \u904e\u7a0b\u5f88\u91cd\u8981</p> </li> <li> <p> C. Incremental Stay, round 1053 C, \u904e\u7a0b\u5f88\u91cd\u8981</p> </li> <li> <p> C. Monocarp's String, round 183 C, \u6709\u60f3\u5c0d\u65b9\u5411\u4f46\u662f\u6700\u5f8c\u6c92\u505a\u51fa\u4f86!</p> </li> <li> <p> [Tutorial] Problems about swapping adjacent elements</p> </li> <li> <p> B. Random Teams, \u7528 connected component \u53bb\u5206\u6790!</p> </li> <li> <p> round [#1059]</p> </li> </ul>"},{"location":"todo/list/#wait-to-do","title":"wait to do","text":"<ul> <li> <p> F. Jee, You See?, 2025/10/05</p> </li> <li> <p> D. Division Versus Addition, round 1055 D.</p> </li> <li> <p> D. A and B, round 1054 D.</p> </li> <li> <p> D. Grid Counting, round 1053 D.</p> </li> <li> <p> E. Hidden Knowledge of the Ancients , round 1054 E. rating 1500</p> </li> </ul>"},{"location":"todo/list/#luogu","title":"luogu","text":"<ul> <li> <p> HH \u7684\u9879\u94fe</p> </li> <li> <p> \u6a21\u677f</p> </li> <li> <p> \u6d1b\u8c37\u70ed\u95e8\u9898\u76ee</p> </li> <li> <p> CF \u984c\u55ae</p> </li> </ul>"}]}